// <auto-generated />
<<<<<<< HEAD
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;
=======
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingApp;
>>>>>>> master

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

<<<<<<< HEAD
            modelBuilder.Entity("backend.Models.Payment", b =>
=======
            modelBuilder.Entity("ParkingApp.Booking", b =>
>>>>>>> master
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

<<<<<<< HEAD
                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
=======
                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParkingSpotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
>>>>>>> master
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.ToTable("Payments");
=======
                    b.HasIndex("ParkingSpotId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ParkingApp.ParkingSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("ParkingApp.Booking", b =>
                {
                    b.HasOne("ParkingApp.ParkingSpot", "ParkingSpot")
                        .WithMany()
                        .HasForeignKey("ParkingSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingSpot");
>>>>>>> master
                });
#pragma warning restore 612, 618
        }
    }
}
